% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_continuous_plus.R
\name{scale_continuous_plus}
\alias{scale_continuous_plus}
\alias{scale_x_continuous_plus}
\alias{scale_y_continuous_plus}
\alias{scale_colour_continuous_plus}
\alias{scale_color_continuous_plus}
\alias{scale_fill_continuous_plus}
\title{Continuous Scales With Guaranteed Breaks Near The Data Limits}
\usage{
scale_x_continuous_plus(..., n = 5, buffer_frac = 0.05, thin_labels = FALSE)

scale_y_continuous_plus(..., n = 5, buffer_frac = 0.05, thin_labels = FALSE)

scale_colour_continuous_plus(
  ...,
  n = 5,
  buffer_frac = 0.05,
  thin_labels = FALSE
)

scale_color_continuous_plus(
  ...,
  n = 5,
  buffer_frac = 0.05,
  thin_labels = FALSE
)

scale_fill_continuous_plus(..., n = 5, buffer_frac = 0.05, thin_labels = FALSE)
}
\arguments{
\item{...}{Additional arguments passed to \code{\link[ggplot2:continuous_scale]{ggplot2::continuous_scale()}}.
Do \strong{not} supply \code{breaks}, \code{limits}, \code{minor_breaks}, \code{n.breaks}, \code{expand},
\code{rescaler}, \code{call}, or \code{super} arguments here, as these are are controlled
or deprecated. You may provide \code{labels}, though they will need to match in
length the number of new breaks exactly, which may require trial and error.
If you pass \code{trans} (deprecated), the input will be forwarded as \code{transform}.}

\item{n}{Desired number of major breaks (a target only; the final count may
differ slightly). Default \code{5}. Should not generally need adjustment.}

\item{buffer_frac}{Fraction of the data span used to judge whether an endpoint
break is “close enough” to the min/max. Default \code{0.05} (i.e., within 5\% of
the span). Should not generally need adjustment.}

\item{thin_labels}{Logical. If \code{TRUE}, every second label (starting with the
second) is replaced by \code{""}—handy for when breaks look too dense. Ignored
if you provide a custom \code{labels} argument.}
}
\value{
A ggproto \verb{ScaleContinuous*} object to add with \code{+}.
}
\description{
\code{scale_x_continuous_plus()} and its kin create continuous scales that try to
put a break+label \strong{at, near, or just beyond} both ends of the data range
while retaining “pretty” break spacing. This avoids unlabeled endpoints, e.g.
data ranging from 2.5–8.5 but breaks of 3, 5, 7 only. Minor breaks are not used.
Typical scale arguments beyond \code{breaks}, \code{limits}, and a few others can be used
just as in \code{ggplot2}'s scale_*_continuous() functions.
}
\section{How it works (briefly)}{

The scale computes candidate breaks with \code{\link[scales:pretty_breaks]{scales::pretty_breaks()}} and, if
needed, \strong{gently expands} the working scale limits until there’s a break
near both ends (within \code{buffer_frac}). Final \code{limits} are set from the
expanded span, and final \code{breaks} are clipped back to the trained limits.
}

\examples{
library(ggplot2)

# Endpoint-labeled x and y
ggplot2::ggplot(iris, ggplot2::aes(Sepal.Length, Petal.Length)) +
  ggplot2::geom_point() +
  scale_x_continuous_plus() +
  scale_y_continuous_plus()

#' # For comparison
ggplot2::ggplot(iris, ggplot2::aes(Sepal.Length, Petal.Length)) +
  ggplot2::geom_point() +
  ggplot2::scale_x_continuous() +
  ggplot2::scale_y_continuous()

# Boxplot: discrete x, continuous y → y-only endpoint-aware breaks
ggplot2::ggplot(mtcars, ggplot2::aes(factor(cyl), mpg)) +
  ggplot2::geom_boxplot() +
  scale_y_continuous_plus(n = 6)

# Continuous colorbar with endpoint-conscious breaks, though with tweaks
ggplot2::ggplot(faithfuld, ggplot2::aes(waiting, eruptions, fill = density)) +
  ggplot2::geom_raster() +
  scale_fill_continuous_plus(buffer_frac = 0.03, thin_labels = TRUE)

}
\seealso{
ggplot2’s \code{\link[ggplot2:scale_continuous]{ggplot2::scale_x_continuous()}},
\code{\link[scales:pretty_breaks]{scales::pretty_breaks()}}, and \code{\link[ggplot2:guide_axis]{ggplot2::guide_axis()}}
}
