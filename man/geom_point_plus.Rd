% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_point_plus.R
\name{geom_point_plus}
\alias{geom_point_plus}
\title{Create and add a scatterplot layer to your \code{ggplot2} graph with new, distinctive shapes.}
\usage{
geom_point_plus(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  avail_shapes = shapes.list,
  n_shapes = length(avail_shapes),
  chosen_shapes = NULL,
  legend_title = NULL,
  key_size = 10,
  include_shape_legend = TRUE,
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by aes(), as in \code{ggplot2::geom_point()}.}

\item{data}{The data to be displayed in this layer, as in \code{ggplot2::geom_point()}.}

\item{stat}{The statistical transformation to use on the data for this layer, as in \code{ggplot2::geom_point()}.}

\item{position}{A position adjustment to use on the data for this layer, as in \code{ggplot2::geom_point()}.}

\item{avail_shapes}{A named list of custom shapes to be drawn in place of \code{ggplot2}'s standard palette of shapes. Defaults to \code{shapes.list}, the palette of shapes designed specifically for use in \code{geom_point_plus()} and should (probably) not be changed unless users have created new shapes they would like to use instead.}

\item{n_shapes}{A length-1 integer corresponding to the number of distinct shapes the function is allowed to pull from the shapes palette specified to \code{avail_shapes}. Defaults to the length of \code{avail_shapes} and should (probably) not be changed.}

\item{chosen_shapes}{A character string referring by name to elements in the \code{shapes.list} the function should use to allocate shapes to values, e.g. \verb{c("flower", "octagon", "squircle)}. These are provided internally to a \code{scale_shape_manual()} call and are meant to circumvent the need for such a call to specify a specific subset of shapes to be used. Defaults to \code{NULL}, i.e., shapes are pulled from \code{shapes.list} in order. Values here must match the names of those in \code{avail_shapes}. Numerical values will use \code{ggplot2}'s default shapes instead.}

\item{legend_title}{A length-1 character string corresponding to the name to be used for the shape legend title (if any). This is passed internally to \code{scale_shape_manual()} and is meant to help circumvent the need for the user to specify any such call directly.}

\item{key_size}{A length-1 numeric value corresponding to the desired size of the legend keys. Defaults to 10. This is passed internally to \code{scale_shape_manual()} and is meant to help circumvent the need for the user to specify any such call directly.}

\item{include_shape_legend}{Logical indicating whether a shape legend will be shown (one is always shown unless this is set to FALSE).}

\item{...}{Other arguments passed on to layer()'s params argument, as in \code{ggplot2::geom_point()}.}

\item{na.rm}{Logical value controlling whether missing values should be removed from the data with a warning or silently, as in \code{ggplot2::geom_point()}.}

\item{show.legend}{Logical value controlling whether this layer should be included in the legends, as in \code{ggplot2::geom_point()}.}

\item{inherit.aes}{Logical for whether the default aesthetics should be overridden rather than combined with the provided aesthetics, as in \code{ggplot2::geom_point()}.}
}
\value{
A ggplot2 layer object.
}
\description{
This function behaves similarly to \code{ggplot2::geom_point()} except that it takes several new inputs: \code{shapes}, \code{n_shapes}, \code{shape_values}, \code{legend_title}, and \code{key_size}. These are explained below. Collectively, these inputs allow \code{geom_point_plus()} to access and draw several new and distinctive shapes that are designed to be more readily distinguishable from one another when shape communicates difference.
}
\examples{
ggplot2::ggplot(mtcars, ggplot2::aes(wt, mpg, fill = drat)) +
geom_point_plus(ggplot2::aes(shape = factor(gear)), size = 5)
ggplot2::ggplot(mtcars, ggplot2::aes(wt, mpg, fill = factor(cyl))) +
geom_point_plus(ggplot2::aes(shape = factor(carb)),
shape_values = c("squircle", "lotus", "sunburst", "octagon", "cross", "oval"),
size = 5, stroke = 0.4)
ggplot2::ggplot(iris, ggplot2::aes(Petal.Width, Petal.Length, fill = Species)) +
geom_point_plus(ggplot2::aes(shape = Species), size = 5, alpha = 0.7)

}
